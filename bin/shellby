#!/bin/bash

#########################
# set up signal handler #
#########################

declare exitp=true

handleTerm() {
  if $exitp; then
    exit 1
  else
    exitp=true
  fi
}

declare -r thisPid=$$
export thisPid
# when the parent is killed, clean up all of the subprocesses(maybe not -9...)
trap "kill -TERM -$thisPid;" SIGINT EXIT

trap "handleTerm" SIGTERM

####################
# check for config #
####################

if [ ! -d "$HOME/.shellby" ]; then
  mkdir "$HOME/.shellby"
  mkdir "$HOME/.shellby/etc"
fi

declare -r botConfig="$HOME/.shellby"
export botConfig

declare -r parentDir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )" 
declare botLib
declare botShare

if [[ "$parentDir" == "/usr/bin" ]]; then
  botLib="/usr/lib/shellby"
  botShare="/user/share/shellby"
else
  botLib="$parentDir/lib"
  botShare="$parentDir/share"
fi

###################
# launch with env #
###################

declare botPid

startBot() {
  env -i thisPid=$thisPid DEBUG=$DEBUG botConfig="$botConfig" botLib="$botLib" botShare="$botShare" $botLib/main "$@"
}

reload() {
  exitp=false
  kill -TERM -$thisPid
  sleep 30
  startBot &
}

trap "reload" SIGUSR1

startBot &

while true; do
  wait
  sleep 1
done
