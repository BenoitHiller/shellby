#!/bin/bash

###############
# load config #
###############

export PATH="$botLib:$PATH"

export botConfig
export botLib
export botShare

declare -rx botPid="$$"
declare -rx botDir="$(cd "$(dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )" 

declare -rx botLogs="$botConfig/logs"

source "$botConfig/etc/config"

if [[ -z "$NICK" ]]; then
  echo "Nick missing from $botConfig/etc/config." >&2
  kill -INT "$thisPid"
  exit 1
fi

if [[ ! -s "$botConfig/etc/admins" ]]; then
  printf "\033[0;33m%s\033[0m\n" "Warning: You don't have any admins configured in $botConfig/etc/admins" >&2
fi

if [[ ! -f "$botConfig/etc/wolframKey" ]]; then
  printf "\033[0;33m%s\033[0m\n" "Warning: There is no API key in $botConfig/etc/wolframKey. The wolfram command will not work." >&2
fi

if [[ ! -f "$botConfig/etc/unshortenKey" ]]; then
  printf "\033[0;33m%s\033[0m\n" "Warning: There is no API key in $botConfig/etc/unshortenKey. Without an unshorten.it key the unshort command will not work." >&2
fi

if [[ ! -f "$botConfig/etc/youtubeKey" ]]; then
  printf "\033[0;33m%s\033[0m\n" "Warning: There is no API key in $botConfig/etc/youtubeKey. The youtube command will not work." >&2
fi

if [[ ! -f "$botConfig/etc/password" ]]; then
  printf "\033[0;34m%s\033[0m\n" "Info: It is strongly recommended that you register a nick for the bot with nickserv then place the password in $botConfig/etc/password" >&2
fi

#####################
# Set up buffer dir #
#####################

declare -rx bufferDir="$(mktemp -p "$TMPDIR" -d streambot.XXXXXX)"

source "$botLib/loadConfig.sh"

################
# toggle debug #
################

[ ! -z "$DEBUG" ] && set -x

#########################
# set up signal handler #
#########################

trap "rm -rf $bufferDir; exit 1" SIGINT SIGTERM EXIT

#####################
# load dependencies #
#####################

source "$botLib/commandLoader.sh"

###################
# Test Connection #
###################

while ! netcat -z -w 5 $TARGETSERVER $PORT; do
  sleep 1
done

#################
# update uptime #
#################

printf "%(%s)T" > "$bufferDir/etc/lastContact"

if [[ -f "$botLogs/uptimeStats" ]]; then
  declare uptimeStats="$(gawk '
    {
      current = strftime("%s")
      previousValue = $1
      first = $2
      last = $3
      newValue = (previousValue * (last - first)) / (current - first)
      printf("%.12g %d %d", newValue, first, current)
    }

    ' < "$botLogs/uptimeStats")"
  echo "$uptimeStats" > "$botLogs/uptimeStats"
fi

#################
# start the bot #
#################

mkfifo "$bufferDir/toNetcat" "$bufferDir/fromNetcat"
managePipes "$botLib/commands/" "$bufferDir/toNetcat" "$bufferDir/fromNetcat"

stdbuf -oL netcat -i 1 $TARGETSERVER $PORT < "$bufferDir/toNetcat" \
  | sed -u 's/$//' \
  | tee "$bufferDir/fromNetcat" \
  | grep --line-buffered "^"  & 
declare -i pipelinePid=$!

echo started

trap reloadAllConfig SIGHUP

{
  while ! ps -p $pipelinePid >/dev/null 2>&1; do
    sleep 5
  done 

  while ps -p $pipelinePid >/dev/null 2>&1; do
    sleep 5
  done 

  echo "!!! Netcat died. Reloading Main."

  kill -USR1 $thisPid
} &

watchFiles "$botLib/commands/" "$bufferDir/toNetcat" "$bufferDir/fromNetcat"

