#!/bin/bash

# print a number of seconds as a formatted date
#
# 1.totalSeconds the number of seconds to format
printDate() {
  local -ri totalSeconds="$1"

  local -ri seconds=$((totalSeconds % 60))
  local -ri minutes=$(((totalSeconds / 60) % 60))
  local -ri hours=$(((totalSeconds / 60 / 60) % 24))
  local -ri days=$((totalSeconds / 60 / 60 / 24))

  printf "%d days, %d hours, %d minutes and %d seconds" $days $hours $minutes $seconds 
}

# Print the current uptime stats
printUptimePercent() {
  if [[ -f "$botLogs/uptimeStats" ]]; then
    gawk '
      {
        printf("%.7g%% since %s", $1 * 100, strftime("%Y-%m-%d", $2));
      }
    ' < "$botLogs/uptimeStats"
  fi
}

main() {
  local -r channel="$2"

  local -i previous
  previous="$(< "$botLogs/uptime")"
  if (($?)); then
    previous=0
  fi

  local -ri started="$(stat -c %Z "$bufferDir")"
  local -ri current="$(date +%s)"

  local -ri elapsed=$((current - started))

  if ((previous > elapsed)); then
    printf "current: %s. best: %s. %s" "$(printDate "$elapsed")" "$(printDate "$previous")" "$(printUptimePercent)" | privmsg "$channel"
  else
    printf "%s. %s" "$(printDate "$elapsed")" "$(printUptimePercent)" | privmsg "$channel"
  fi
}

main "$@"
