#!/bin/bash

set -f

source "$botLib/functionUtils.sh"
source "$botLib/irc.sh"

# remove a user from a channel
#
# 1.userDir the user's directory
# 2.channel the channel to leave
leaveChannel() {
  local -r userDir="$1"
  local -r channel="$2"

  rm -r "$userDir/channels/$channel"

  if [[ ! -n "$(ls -A "$userDir/channels")" ]]; then
    rm -r "$userDir"
  fi
}

# update channel info for user
#
# 1.userDir the user's directory
# 2.channel the channel to leave
# 3.flags status flags on channel
updateChannelInfo() {
  local -r userDir="$1"
  local -r channel="$2"
  local -r flags="$3"

  local -r channelDir="$userDir/channels/$channel"
  mkdir -p "$channelDir"

  >"$channelDir/op"
  >"$channelDir/voice"

  if [[ "$flags" =~ @ ]]; then
    printf "%(%s)T\n" > "$channelDir/op"
  elif [[ "$flags" =~ \+ ]]; then
    printf "%(%s)T\n" > "$channelDir/voice"
  fi 
}

# update mode for user in channel
#
# 1.userDir directory for user
# 2.channel channel name
# 3.mode mode string
updateMode() {
  local -r userDir="$1"
  local -r channel="$2"
  local -r mode="$3"
  local channelDir="$userDir/channels/$channel"

  mkdir -p "$channelDir"

  if [[ "$mode" =~ ^\+ ]]; then
    if [[ "$mode" =~ o ]]; then
      >"$channelDir/op"
    fi
    if [[ "$mode" =~ v ]]; then
      >"$channelDir/voice"
    fi
  else
    if [[ "$mode" =~ o ]]; then
      printf "%(%s)T\n" > "$channelDir/op"
    fi
    if [[ "$mode" =~ v ]]; then
      printf "%(%s)T\n" > "$channelDir/voice"
    fi
  fi
}
# update the user and hostname
#
# 1.userDir
# 2.username
# 3.hostname
# 4.nickserv nickserv account name
updateUserInfo() {
  local -r userDir="$1"
  local -r username="$2"
  local -r hostname="$3"
  local -r nickserv="$4"

  mkdir -p "$userDir"

  printf "%s\n" "$username" > "$userDir/username"
  printf "%s\n" "$hostname" > "$userDir/hostname"
  if [[ -z "$nickserv" || "$nickserv" == 0 ]]; then
    >"$userDir/nickserv"
  else
    printf "%s\n" "$nickserv" > "$userDir/nickserv"
  fi
}

bufferWho() {
  local -r userPipe="$1"
  while true; do
    sed 's/.*/WHO & %nuhcaf/' < "$userPipe"
    sleep 1
  done
}

monitorUsers() {
  local -r channelRegex="^#"
  local -r botName="$(< "$bufferDir/etc/nickname")" 
  local -r userDir="$bufferDir/etc/users"
  local -r userPipe="$(mktemp -u "$bufferDir/user.XXXX")"

  mkfifo "$userPipe"
  bufferWho "$userPipe" &

  mkdir -p "$userDir"

  local -a data
  local -a fields

  local cmd
  local nick
  local currentUser
  local channel
  local newNick
  local mode

  while read -r line; do
    data=( $(getIRCInfo "$line") ) 
    if (($? == 0)); then
      cmd="${data[2],,}"
      nick="${data[0]}"
      currentUser="$userDir/$nick"
      case "$cmd" in
        quit)
            rm -r "$currentUser"
            ;;
        part)
            channel="${data[1]}"
            leaveChannel "$currentUser" "$channel"
            ;;
        kick)
            channel="${data[1]}"
            leaveChannel "$userDir/$target" "$channel"
            ;;
        nick)
            newNick="$(getFields "$line" 2)"
            rm "$currentUser/nickserv"
            mv "$currentUser" "$userDir/${newNick#:}"
            printf "%s\n" "${newNick#:}" >> "$userPipe"
            ;;
        join)
            channel="${data[1]}"
            updateUserInfo "$currentUser" "${data[3]}" "${data[4]}"
            printf "%s\n" "$nick" >> "$userPipe"
            mkdir -p "$currentUser/channels/$channel"
            ;;
        mode)
            channel="${data[1]}"
            if [[ "$channel" =~ $channelRegex ]]; then
              # mode nick
              fields=( $(getFields "$line" 3 4) )
              nick="${fields[1]}"
              currentUser="$userDir/$nick"
              
              mode="${fields[0]}"
              if [[ ! "$mode" =~ b ]]; then
                updateMode "$currentUser" "$channel" "$mode"
              fi
            fi
            ;;
        354)
            # channel username hostname nick flag nickserv
            fields=( $(getFields "$line" 3 4 5 6 7 8) )
            channel="${fields[0]}"
            nick="${fields[3]}"
            currentUser="$userDir/$nick"
            updateUserInfo "$currentUser" "${fields[1]}" "${fields[2]}" "${fields[5]}"
            updateChannelInfo "$currentUser" "$channel" "${fields[4]}"
            ;;
      esac
    fi
  done
}

startAndWatch monitorUsers
