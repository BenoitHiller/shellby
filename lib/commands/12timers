#!/bin/bash

updateUptime() {
  local -ri started="$(stat -c %Z "$bufferDir")"
  if (($? == 0)); then
    local -ri current="$(date +%s)"

    local -ri elapsed=$((current - started))
    if [[ ! -f "$botLogs/uptime" ]]; then
      echo "$elapsed" > "$botLogs/uptime"
    else
      local -ri previous=$(cat "$botLogs/uptime")
      if ((previous < elapsed)); then
        echo "$elapsed" > "$botLogs/uptime"
      fi
    fi
  fi
}

# update the info in the uptimeStats file
updateUptimeStats() {
  if [[ -f "$botLogs/uptimeStats" ]]; then
    local -r newData="$(gawk '
      {
        current = strftime("%s")
        previousValue = $1
        first = $2
        last = $3
        newValue = (previousValue * (last - first) + (current - last)) / (current - first)
        printf("%.12g %d %d", newValue, first, current)
      }

      ' < "$botLogs/uptimeStats")"

    echo "$newData" > "$botLogs/uptimeStats"
  else
    local -r date="$(date +%s)"
    echo "1 $date $date" > "$botLogs/uptimeStats"
  fi
}

thirtyLoop() {
  while true; do
    if (( $(date +%s) - $(cat "$bufferDir/etc/lastContact") > 300 )); then
      echo "Restarted at: $(date +%s) after no contact since $(cat "$bufferDir/etc/lastContact")" >&2
      kill -USR1 $thisPid
    fi

    echo PING "$TARGETSERVER"

    updateUptime
    updateUptimeStats

    sleep 30
  done
}

oneTwentyLoop() {
  while true; do
    echo WHOIS $(cat "$bufferDir/etc/nickname") &
    sleep 120
  done
}

oneHourLoop() {
  while true; do
    if [[ -d "$bufferDir/cache/pastebin/" ]]; then
      find "$bufferDir/cache/pastebin/" -name "md5.*" -mtime +6 -exec rm {} \;
    fi
    sleep $(( 60 * 60 ))
  done
}

main() {
  trap '' SIGHUP

  source "$botConfig/etc/config"

  # consume the input to the command so that the pipe does not fill
  grep --line-buffered "^" <&0 > /dev/null &

  thirtyLoop &
  oneTwentyLoop &
  oneHourLoop &

  wait
}

main "$@"
